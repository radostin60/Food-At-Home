@using Food_At_Home.Models.Dish;
@using Food_At_Home.Extensions;
@model DishesQueryModel;

<form method="get">
    <div class="row" style="margin-left: 140px;">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="DishesPerPage"></label>
                <select asp-for="DishesPerPage" class="form-control">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>
                </select>
            </div>
        </div>

        

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="DishSorting"></label>
                <select asp-for="DishSorting" class="form-control">
                    <option value="0">Price (Ascending) </option>
                    <option value="1">Price (Descending)</option>
                    <option value="2">Quantity (Ascending)</option>
                    <option value="3">Quantity (Descending)</option>
                    <option value="4">Name</option>
                </select>
            </div>
        </div>

       
    </div>
</form>

@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalDishes /
        Model.DishesPerPage);
}

<div class="row mb-4">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-light btn-rounded @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Dish"
           asp-action="Menu"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-sorting="@((int)Model.DishSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Dishes.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-light btn-rounded
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Dish"
           asp-action="Menu"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-sorting="@((int)Model.DishSorting)">>></a>
    </div>
</div>

@if (!Model.Dishes.Any())
{
    <h2 class="text-center text-black">No dishes found by the given criteria!</h2>
}
else
{
    <section class="main-content">
        <h1 class="text-center text-uppercase text-black">Menu</h1>
        <div class="container">
            <div class="row" style="margin-left: 140px;">
                @foreach (var dish in Model.Dishes)
                {

                    <div class="col-md-4">
                        <div class="card dish-card">
                            <img src="@dish.DishImageUrl" alt="@dish.Name">
                            <div class="card-body">
                                <h5 class="card-title text-black">@dish.Name</h5>
                                <p class="card-text text-black">@dish.Description</p>
                                <p class="card-ingredients text-black">Ingredients: @dish.Ingredients</p>
                                <p class="card-price text-black"> @dish.Price lv.</p>
                                @if (User.IsInRole("Restaurant") && User.GetId() == @dish.RestaurantUserId)
                                {
                                    <a asp-action="Edit" asp-controller="Dish" asp-route-dishId="@dish.Id" class="btn btn-warning edit-btn">Edit</a>
                                    <a asp-action="Delete" asp-controller="Dish" asp-route-id="@dish.Id" class="btn btn-danger edit-btn">Delete</a>
                                }
                                else if (User.IsInRole("Customer") && (User.Identity.IsAuthenticated))
                                {
                                    <a asp-action="AddToCart" asp-controller="Dish" asp-route-dishId="@dish.Id" class="btn btn-warning edit-btn">Order</a>
                                }
                            </div>
                        </div>
                    
                    </div>


                }
            </div>
        </div>

    </section>
}